
const state={products:[],cart:JSON.parse(localStorage.getItem('sanaya_cart')||'[]')};
async function loadProducts(){const r=await fetch('products.json',{cache:'no-store'});state.products=await r.json();return state.products}
function saveCart(){localStorage.setItem('sanaya_cart',JSON.stringify(state.cart));updateCartCount()}
function updateCartCount(){const c=state.cart.reduce((a,b)=>a+b.qty,0);document.querySelectorAll('[data-cart-count]').forEach(el=>el.textContent=c)}
function el(h){const t=document.createElement('template');t.innerHTML=h.trim();return t.content.firstElementChild}
function productCard(p){return el(`<article class="card product"><div class="thumb">${p.badge?`<span class="badge">${p.badge}</span>`:''}<a href="product.html?id=${p.id}"><img loading="lazy" src="${p.image}" alt="${p.name}"></a></div><div class="content"><a class="name" href="product.html?id=${p.id}">${p.name}</a><div class="muted">${p.category.toUpperCase()}</div><div class="price">Rs. ${Number(p.price).toLocaleString()}</div><button class="btn" data-add="${p.id}">Add to Cart</button></div></article>`)}
function mountCards(sel, list){const wrap=document.querySelector(sel);if(!wrap)return;wrap.innerHTML='';const g=document.createElement('div');g.className='grid';g.style.gridTemplateColumns='repeat(auto-fill, minmax(220px,1fr))';list.forEach(p=>g.appendChild(productCard(p)));wrap.appendChild(g);wrap.querySelectorAll('[data-add]').forEach(btn=>{btn.addEventListener('click',e=>{const id=Number(e.currentTarget.getAttribute('data-add'));addToCart(id,1);e.currentTarget.textContent='Added âœ“';setTimeout(()=>e.currentTarget.textContent='Add to Cart',1200);});});}
function addToCart(id,qty=1,size=null){const p=state.products.find(x=>x.id===id);if(!p)return;const key=id+'|'+(size||'');const ex=state.cart.find(x=>x.key===key);if(ex)ex.qty+=qty;else state.cart.push({key,id,size,qty,price:p.price,name:p.name,image:p.image});saveCart()}
function renderCart(){const t=document.querySelector('#cartTable');const s=document.querySelector('#cartSummary');if(!t)return;t.innerHTML='';let sub=0;state.cart.forEach((it,i)=>{sub+=it.price*it.qty;t.appendChild(el(`<tr><td><img src="${it.image}" width="60" style="border-radius:10px"></td><td>${it.name}${it.size?` <small>(${it.size})</small>`:''}</td><td>Rs. ${Number(it.price).toLocaleString()}</td><td><button class="btn ghost" data-minus="${i}">-</button><span style="padding:0 10px">${it.qty}</span><button class="btn ghost" data-plus="${i}">+</button></td><td><button class="btn outline" data-remove="${i}">Remove</button></td></tr>`));});const ship=sub>0?200:0;const total=sub+ship;if(s){s.innerHTML=`<div>Subtotal: <strong>Rs. ${sub.toLocaleString()}</strong></div><div>Shipping: <strong>Rs. ${ship.toLocaleString()}</strong></div><div style="font-size:20px;margin-top:8px">Total: <strong>Rs. ${total.toLocaleString()}</strong></div><a class="btn" href="checkout.html">Checkout</a>`}t.querySelectorAll('[data-minus]').forEach(btn=>btn.onclick=e=>{const i=+e.currentTarget.dataset.minus;if(state.cart[i].qty>1)state.cart[i].qty--;saveCart();renderCart()});t.querySelectorAll('[data-plus]').forEach(btn=>btn.onclick=e=>{const i=+e.currentTarget.dataset.plus;state.cart[i].qty++;saveCart();renderCart()});t.querySelectorAll('[data-remove]').forEach(btn=>btn.onclick=e=>{const i=+e.currentTarget.dataset.remove;state.cart.splice(i,1);saveCart();renderCart()})}
async function maybeLoadFromSheet(){const url=window.SHEETS_CSV_URL||'';if(!url)return false;try{const r=await fetch(url,{cache:'no-store'});if(!r.ok)return false;const csv=await r.text();const rows=csv.trim().split(/\r?\n/).map(r=>r.split(','));const header=rows.shift().map(h=>h.trim().toLowerCase());const idx=n=>header.indexOf(n);state.products=rows.map((r,i)=>({id:Number(r[idx('id')]||i+1),name:r[idx('name')]||'Product',category:(r[idx('category')]||'misc').toLowerCase(),price:Number(r[idx('price')]||0),sizes:(r[idx('sizes')]||'S,M,L').split(/\s*;\s*|,\s*/),image:r[idx('image')]||'images/model_01.png',badge:r[idx('badge')]||'',description:r[idx('description')]||''}));return true}catch(e){console.warn('Sheet load failed',e);return false}}
async function boot(){updateCartCount();const fromSheet=await maybeLoadFromSheet();if(!fromSheet)await loadProducts();mountCards('#featuredGrid', state.products.slice(0,8));const wrap=document.querySelector('#shopGrid');if(wrap){const sel=document.querySelector('#filterCat');const q=document.querySelector('#searchQuery');function apply(){const qq=(q.value||'').toLowerCase();const c=sel.value;let list=state.products;if(c!=='all')list=list.filter(p=>p.category===c);if(qq)list=list.filter(p=>p.name.toLowerCase().includes(qq));mountCards('#shopGrid',list)}['input','change'].forEach(e=>{sel.addEventListener(e,apply);q.addEventListener(e,apply)});apply()}const pid=Number(new URLSearchParams(location.search).get('id'));if(document.querySelector('#productDetail')&&pid){const p=state.products.find(x=>x.id===pid)||state.products[0];const box=document.querySelector('#productDetail');box.innerHTML=`<div class="grid" style="grid-template-columns:1fr 1fr;gap:30px"><img src="${p.image}" alt="${p.name}" style="width:100%;border-radius:20px;box-shadow:var(--shadow);max-height:520px;object-fit:cover"><div><h1>${p.name}</h1><div class="muted">${p.category.toUpperCase()}</div><div class="price" style="font-size:28px;margin:8px 0 16px">Rs. ${Number(p.price).toLocaleString()}</div><p>${p.description}</p><label>Size:</label><select id="sizeSelect" class="input">${p.sizes.map(s=>`<option value="${s}">${s}</option>`).join('')}</select><div style="display:flex;gap:10px;margin-top:16px"><button class="btn" id="addDetail">Add to Cart</button><a class="btn outline" href="cart.html">Go to Cart</a></div></div></div>`;document.querySelector('#addDetail').onclick=()=>{const size=document.querySelector('#sizeSelect').value;addToCart(p.id,1,size)}}renderCart()}
document.addEventListener('DOMContentLoaded', boot);
